@layer reset, theme, transitions, layout, pages, grid, components;

/*@import url('uses/anim.css') layer(transitions);
@import url('uses/grid.css') layer(layout);
@import url('uses/info.css') layer(components);*/

@view-transition {
  navigation: none;
}

@layer reset {

  * {
    box-sizing: border-box;
  }

  menu,
  ul {
    margin: 0;
    padding: 0;
  }

}

@layer theme {
  :root {

    --background: #16161b;
    --foreground: white;

    --shadow: #18181a;
    --popout: 0.5rem;
    --colwidth: 4rem;
    --rowheight: 3.5rem;
  }
}

@layer layout {
  body {
    font-family: Arial, sans-serif;
    margin: 0;
    color: var(--foreground);
    padding: 20px;
    background-color: var(--background);
  }

  body> :first-child {
    /*ghp-router*/
    position: fixed;
    display: block;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    height: 100%;
    width: 100%;

    box-sizing: border-box;
  }

}

@layer grid {

  menu.panner {
    /* panner */
    width: 100dvw;
    height: 100dvh;

    /*margin-inline: 10% 90%;
    margin-block: 10%;*/

    display: flex;

    padding-bottom:5%;
    padding-right:5%;
    justify-content: center;
    align-items: center;

    /*transform-origin: 50% 50%;*/

  }

  .grid-container {

    display: grid;

    grid-auto-columns: var(--colwidth);
    grid-auto-rows: var(--rowheight);

    /* grid-template-columns: repeat(auto-fit, minmax(calc(4*var(--colwidth)), 1fr));
    grid-template-rows: repeat(auto-fit, minmax(calc(3*var(--rowheight)), 1fr));*/

    grid-auto-flow: dense;
    gap: 0% 0%;

    width: fit-content;
    height: fit-content;
    max-width: 100%;
    background-color: white;

    transform: rotate(-35deg) skew(22deg);
    transform-origin: 40% 50%;

    box-shadow: -20px 20px 60px var(--shadow);

  }

  .grid-container>* {

    grid-column: span 4;
    grid-row: span 3;

    background-color: var(--background);
    color: white;

    -webkit-column-break-inside: avoid;
    column-break-inside: avoid;

    transition: 200ms transform;

  }

  .grid-container>aside {
    grid-column: span 8;
    grid-row: span 2;
  }

  @media (max-width: 767px) {

    :root {
      --colwidth: calc(minmax(4rem, 1fr));
    }

    menu.panner {
      align-items: start; 
      padding: 2rem;
    }

    .grid-container {
      transform: unset;
      transform-origin: unset;
      border: 1px solid white;

      > * {
        grid-column: span 8;
        grid-row: span 2;
      }

      > :first-child {
        grid-row:span 3;
      }

      > :not(:last-child) {
        border-bottom: 1px solid white;
      }

    }
    
  
  }

  .grid-container {

    a>* {
      width: 100%;
      height: 100%;
      color: white;
    }

    div {
      padding-block: 16px;
      padding-inline: 20px;
    }

    :focus {
      outline: none;
      >* {
        outline: 3px solid white;
      }
    }

    ul:not(:has(> .active), :has(> :focus)):hover {
      outline: 2px solid white;
      transform: translate(var(--popout), calc(-1 * var(--popout)));
      z-index: 2;
    }

    /* issue: not always triggered between pageswaps */
    ul:has(> .active) {
      transform: translate(var(--popout), calc(-1 * var(--popout)));
      animation: 0.125s ease-out normal forwards link-down;
      view-transition-name: disabled;
      pointer-events: none;
    }

    h1 {
      all: unset;
      font-size: 2em;
      font-weight: bold;
      display: block;
    }

    p {
      all: unset;
      font-size: 1rem;
      display: block;
    }
  }

}


/*@media (pointer:none),
(pointer:coarse) {

  .panner {
    all: unset;
  }

  .grid-container {
    column-count: 1;
    display: block;
    transform: revert;
    transform-origin: revert;
    border: 1px solid white;
    border-bottom: unset;
  }

  .grid-item {
    border-bottom: 1px solid white;

  }

  ghp-router {
    all: unset;
    position: relative;
  }

  main {
    background-color: var(--background);
    border-top: 1px solid white;
    width: 100dvw;
    left: 0;
    padding-left: 2rem;
    padding-bottom: 1rem;
    bottom: 0rem;
  }
}*/